name: iOS Build

on:
  push:
    branches:
      - dev  # Trigger on push to the main branch

jobs:
  ios-build:
    name: iOS Build
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profile
      
      # - name: Clean up keychain and provisioning profile
      #   if: ${{ always() }}
      #   run: |
      #     security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
      #     rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable


      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Build the iOS app
        run: |
          cd ios
          xcodebuild -workspace ci_test.xcworkspace \
            -scheme ci_test \
            -configuration Release \
            -sdk iphoneos \
            -archivePath build/ci_test.xcarchive \
            -allowProvisioningUpdates archive

      - name: Export the IPA file
        run: |
          xcodebuild -exportArchive -archivePath ios/build/ci_test.xcarchive -exportOptionsPlist ios/exportOptions.plist -exportPath ios/build

      # # Step 3: Export IPA
      # - name: Export IPA
      #   run: |
      #     xcodebuild -exportArchive \
      #       -archivePath ${{ github.workspace }}/ios/build/ci_test.xcarchive \
      #       -exportPath ${{ github.workspace }}/ios/build/ \
      #       -exportOptionsPlist ${{ github.workspace }}/ios/ExportOptions.plist
                  
      - name: Upload IPA to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_IOS }}
          token: ${{ secrets.FIREBASE_AUTH_TOKEN }}
          file: ios/build/ci_test.ipa
          groups: "ios"