name: iOS Build

on:
  push:
    branches:
      - dev # Trigger on push to the main branch

jobs:
  ios-build:
    name: iOS Build
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Apple Developer Credentials
        run: |
          echo "APPLE_DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }}" >> $GITHUB_ENV
          echo "APP_STORE_CONNECT_API_KEY=${{ secrets.APP_STORE_CONNECT_API_KEY }}" >> $GITHUB_ENV
          echo "APP_STORE_CONNECT_API_KEY_ID=${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}" >> $GITHUB_ENV
          echo "APP_STORE_CONNECT_API_KEY_ISSUER_ID=${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}" >> $GITHUB_ENV

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Apple Developer Credentials
        run: |
          echo "APPLE_ID=${{ secrets.APPLE_ACCOUNT_EMAIL }}" >> $GITHUB_ENV
          echo "APPLE_PASSWORD=${{ secrets.APPLE_DEVELOPER_PASSWORD }}" >> $GITHUB_ENV

      - name: Debug API Key Secrets
        run: |
          echo "API Key ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}"
          echo "API Issuer ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}"

      - name: Setup App Store Connect API Key
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}.p8

      - name: Verify Signing Certificate
        run: security find-identity -p codesigning -v

      - name: List Available Provisioning Profiles
        run: ls ~/Library/MobileDevice/Provisioning\ Profiles/ || echo "No profiles found"

      - name: Check Provisioning Profile Details
        run: |
          PROFILE=$(ls ~/Library/MobileDevice/Provisioning\ Profiles/ | head -n 1)
          if [[ -z "$PROFILE" ]]; then
          echo "❌ No provisioning profile found"; exit 1
          fi
          security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE | grep -A10 "<key>TeamIdentifier</key>"

      - name: Verify App Store Connect API Key
        run: |
          xcrun altool --list-providers --apiKey "${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}" --apiIssuer "${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}" || echo "❌ API Key check failed"
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Build the iOS app
        run: |
          xcodebuild -workspace ios/ci_test.xcworkspace \
            -scheme ci_test \
            -configuration "Release" \
            -sdk iphoneos \
            -archivePath build/ci_test.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=$APPLE_DEVELOPMENT_TEAM \
            PROVISIONING_PROFILE_SPECIFIER="CI_DISTRUBUTION" \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            archive


      - name: Export the IPA file
        run: |
          xcodebuild -exportArchive \
            -archivePath build/ci_test.xcarchive \
            -exportPath build/export \
            -exportOptionsPlist ios/exportOptions.plist \
            -allowProvisioningUpdates
    
      - name: Upload IPA to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        run: |
          xcrun altool --upload-app \
            -f build/export/ci_test.ipa \
            -t ios \
            --apiKey $APP_STORE_CONNECT_API_KEY_ID \
            --apiIssuer $APP_STORE_CONNECT_API_ISSUER_ID  

      # - name: Install dependencies
      #   run: yarn install --frozen-lockfile --network-timeout 300000

      # - name: Install CocoaPods dependencies
      #   run: |
      #     cd ios
      #     pod install --repo-update

      # - name: Build the iOS app
      #   run: |
      #     cd ios
      #     xcodebuild -workspace ci_test.xcworkspace \
      #       -scheme ci_test \
      #       -configuration "Release" \
      #       -sdk iphoneos \
      #       -archivePath build/ci_test.xcarchive \
      #       CODE_SIGN_STYLE=Automatic \
      #       DEVELOPMENT_TEAM=$APPLE_DEVELOPMENT_TEAM \
      #       archive
